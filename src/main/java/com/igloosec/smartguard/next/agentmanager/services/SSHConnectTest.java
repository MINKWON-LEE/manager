/**
 * project : AgentManager
 * program name : com.mobigen.snet.agentmanager.services.SSHConnectTest.java
 * company : Mobigen
 * @author : Je Joong Lee
 * created at : 2016. 4. 14.
 * description : 
 */

package com.igloosec.smartguard.next.agentmanager.services;

import ch.ethz.ssh2.Connection;
import ch.ethz.ssh2.Session;
import com.igloosec.smartguard.next.agentmanager.entity.AgentInfo;
import com.sk.snet.manipulates.PatternMaker;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;

public class SSHConnectTest extends AbstractManager{

		final private static char LF = '\n';
		final private static char CR = '\r';

	public void sshPasswordModeCheck(AgentInfo ai, String cmd){
		
		String ip = ai.getConnectIpAddress();
		int port = ai.getUsePort();
		String id = ai.getUserIdOs();
		String pw = ai.getPasswordOs();
		String rid = ai.getUserIdRoot();
		String rpw = ai.getPasswordRoot();
		
//		ip = "redrug.co.kr"; port=22; id="devmaster"; pw="devmaster2ol2"; rid="root"; rpw = "devhub2oll";
//		ip = "150.23.25.131"; port=22; id="haauc"; pw="auc$1234"; rid="root"; rpw = "auc$1234";
//		ip = "150.23.24.173"; port=22; id="root"; pw="wlseks12#$"; rid="root"; rpw = "wlseks12#$";

		
		Session ssh = null;
		Connection conn = new Connection(ip,port);
		try{
			conn.connect();
			String[] opt = conn.getRemainingAuthMethods(id);
			for(String o :opt){
				System.out.println("OPT : "+o);
			}	
		}catch(Exception e){
			logger.error("error while ssh connect test: \n"+ e.getMessage());
		}
		
	}	
		
	
	public String runRemoteScriptViaSSH(AgentInfo ai, String cmd) throws Exception {
		String ip = ai.getConnectIpAddress();
		int port = ai.getUsePort();
		String id = ai.getUserIdOs();
		String pw = ai.getPasswordOs();
		String rid = ai.getUserIdRoot();
		String rpw = ai.getPasswordRoot();
		
//		ip = "redrug.co.kr"; port=22; id="devmaster"; pw="devmaster2ol2"; rid="root"; rpw = "devhub2oll";
//		ip = "150.23.25.131"; port=22; id="haauc"; pw="auc$1234"; rid="root"; rpw = "auc$1234";
		ip = "150.23.24.173"; port=22; id="root"; pw="wlseks12#$"; rid="root"; rpw = "wlseks12#$";
		
		Session ssh = null;
		Connection conn = new Connection(ip,port);
		
		conn.connect();
		String[] opt = conn.getRemainingAuthMethods(id);
		for(String o :opt){
			System.out.println("OPT : "+o);
		}
		
//		boolean isconn = conn.authenticateWithPublicKey(id, new File("C:\\keytest\\test3\\mykeypriv.pem"), INMEMORYDB.keyStorePw);
		boolean isconn = conn.authenticateWithPublicKey(id, new File("C:\\keytest\\test3\\mykeypriv.pem"), PatternMaker.KS_PMANNER);
//		boolean isconn = conn.authenticateWithPassword(id, pw);
        if (!isconn) {
        	logger.error("LOGIN FAIL.");
        }else{
        	logger.debug("LOGIN OK");
        	ssh = conn.openSession();
        	ssh.requestPTY("xterm");
        	ssh.startShell();
//        	ssh.execCommand("su - "+rid);
//        	ssh.execCommand("ls");
        	InputStream in = ssh.getStdout();
        	OutputStream out = ssh.getStdin();
        	
//        	BufferedReader br = new BufferedReader( new InputStreamReader( in ) );
//        	for(String line = br.readLine(); line != null;line = br.readLine()){
//        		System.out.println(" !!!!!!!!! "+line);	
//        	}
        	
        	
        	
        	out.write(("su").getBytes());
        	out.write(LF);
        	System.out.println("SENT "+"su - "+rid+"\n");
        	
        	BufferedReader br = new BufferedReader( new InputStreamReader( in ) );
        	String line = "";
        	
        	int readInt = in.read();
			char readChar = (char)readInt;
			String str = "";
			String intStr = "";
	    	
			while(readInt != -1){
				str = str+readChar;
				intStr = intStr+" "+ readInt;
				System.out.print("STR : "+ str);
				System.out.println("INTSTR : "+ intStr);
				readInt = in.read();
				readChar = (char)readInt;
			}
        	
//        	line = br.readLine();
//        	int idx = 0;
//        	while( true){
//        		System.out.println(idx+" !!!!!!!!! '"+line+"'");
//        		line = br.readLine();
//        		idx++;
//        	} 
        	
//        	System.out.println("out");
        
        	
        	
        }

		
		
		
		return "";
	}

	public static String[] getIPs(){
		
		
		String[] arr = new String[605];
		arr[0  ]="10.24.124.100";
		arr[1  ]="10.24.124.102";
		arr[2  ]="10.24.124.103";
		arr[3  ]="10.24.124.104";
		arr[4  ]="10.24.124.105";
		arr[5  ]="10.24.124.106";
		arr[6  ]="10.24.124.107";
		arr[7  ]="10.24.124.108";
		arr[8  ]="10.24.124.109";
		arr[9  ]="10.24.124.48";
		arr[10 ]="10.24.124.49";
		arr[11 ]="10.24.124.95";
		arr[12 ]="10.24.124.96";
		arr[13 ]="10.24.124.97";
		arr[14 ]="10.24.124.98";
		arr[15 ]="10.24.124.99";
		arr[16 ]="10.24.13.21";
		arr[17 ]="10.24.13.22";
		arr[18 ]="10.24.13.23";
		arr[19 ]="10.24.13.28";
		arr[20 ]="10.24.28.100";
		arr[21 ]="10.24.28.101";
		arr[22 ]="10.24.28.102";
		arr[23 ]="10.24.28.103";
		arr[24 ]="10.24.28.104";
		arr[25 ]="10.24.28.105";
		arr[26 ]="10.24.28.106";
		arr[27 ]="10.24.28.107";
		arr[28 ]="10.24.28.108";
		arr[29 ]="10.24.29.85";
		arr[30 ]="10.24.29.86";
		arr[31 ]="10.24.29.88";
		arr[32 ]="10.24.29.89";
		arr[33 ]="150.31.13.100";
		arr[34 ]="150.31.13.101";
		arr[35 ]="150.31.13.110";
		arr[36 ]="150.31.13.111";
		arr[37 ]="150.31.13.112";
		arr[38 ]="150.31.13.113";
		arr[39 ]="150.31.13.118";
		arr[40 ]="150.31.13.119";
		arr[41 ]="150.31.13.120";
		arr[42 ]="150.31.13.123";
		arr[43 ]="150.31.13.124";
		arr[44 ]="150.31.13.125";
		arr[45 ]="150.31.13.126";
		arr[46 ]="150.31.13.127";
		arr[47 ]="150.31.13.128";
		arr[48 ]="150.31.13.129";
		arr[49 ]="150.31.13.31";
		arr[50 ]="150.31.13.32";
		arr[51 ]="150.31.13.33";
		arr[52 ]="150.31.13.35";
		arr[53 ]="150.31.13.36";
		arr[54 ]="150.31.13.37";
		arr[55 ]="150.31.13.38";
		arr[56 ]="150.31.13.39";
		arr[57 ]="150.31.13.40";
		arr[58 ]="150.31.13.41";
		arr[59 ]="150.31.13.43";
		arr[60 ]="150.31.13.44";
		arr[61 ]="150.31.13.45";
		arr[62 ]="150.31.13.46";
		arr[63 ]="150.31.13.51";
		arr[64 ]="150.31.13.52";
		arr[65 ]="150.31.13.53";
		arr[66 ]="150.31.13.55";
		arr[67 ]="150.31.13.56";
		arr[68 ]="150.31.13.57";
		arr[69 ]="150.31.13.58";
		arr[70 ]="150.31.13.61";
		arr[71 ]="150.31.13.62";
		arr[72 ]="150.31.13.63";
		arr[73 ]="150.31.13.65";
		arr[74 ]="150.31.13.66";
		arr[75 ]="150.31.13.67";
		arr[76 ]="150.31.13.68";
		arr[77 ]="150.31.131.135";
		arr[78 ]="150.31.131.136";
		arr[79 ]="150.31.131.137";
		arr[80 ]="150.31.131.138";
		arr[81 ]="150.31.131.145";
		arr[82 ]="150.31.131.146";
		arr[83 ]="150.31.131.147";
		arr[84 ]="150.31.131.148";
		arr[85 ]="150.31.131.149";
		arr[86 ]="150.31.131.150";
		arr[87 ]="150.31.131.151";
		arr[88 ]="150.31.131.152";
		arr[89 ]="150.31.131.186";
		arr[90 ]="150.31.131.187";
		arr[91 ]="150.31.131.188";
		arr[92 ]="150.31.131.196";
		arr[93 ]="150.31.131.197";
		arr[94 ]="150.31.131.53";
		arr[95 ]="150.31.131.54";
		arr[96 ]="150.31.131.63";
		arr[97 ]="150.31.131.64";
		arr[98 ]="150.31.136.220";
		arr[99 ]="150.31.136.35";
		arr[100]="172.18.199.110";
		arr[101]="172.18.199.114";
		arr[102]="172.18.199.115";
		arr[103]="172.18.199.125";
		arr[104]="172.18.199.126";
		arr[105]="172.18.199.159";
		arr[106]="172.18.199.166";
		arr[107]="172.18.199.178";
		arr[108]="172.18.199.179";
		arr[109]="172.18.199.241";
		arr[110]="172.18.199.242";
		arr[111]="172.18.199.243";
		arr[112]="172.18.30.100";
		arr[113]="172.18.30.101";
		arr[114]="172.18.30.102";
		arr[115]="172.18.30.107";
		arr[116]="172.18.30.146";
		arr[117]="172.18.30.153";
		arr[118]="172.18.30.154";
		arr[119]="172.18.30.155";
		arr[120]="172.18.30.156";
		arr[121]="172.18.30.157";
		arr[122]="172.18.30.159";
		arr[123]="172.18.30.160";
		arr[124]="172.18.30.162";
		arr[125]="172.18.30.163";
		arr[126]="172.18.30.164";
		arr[127]="172.18.30.165";
		arr[128]="172.18.30.174";
		arr[129]="172.18.30.175";
		arr[130]="172.18.30.177";
		arr[131]="172.18.30.179";
		arr[132]="172.18.30.180";
		arr[133]="172.18.30.189";
		arr[134]="172.18.30.190";
		arr[135]="172.18.30.193";
		arr[136]="172.18.30.194";
		arr[137]="172.18.30.195";
		arr[138]="172.18.30.200";
		arr[139]="172.18.30.201";
		arr[140]="172.18.30.202";
		arr[141]="172.18.30.203";
		arr[142]="172.18.30.204";
		arr[143]="172.18.30.205";
		arr[144]="172.18.30.206";
		arr[145]="172.18.30.207";
		arr[146]="172.18.30.210";
		arr[147]="172.18.30.212";
		arr[148]="172.18.30.213";
		arr[149]="172.18.30.216";
		arr[150]="172.18.30.217";
		arr[151]="172.18.30.218";
		arr[152]="172.18.30.220";
		arr[153]="172.18.30.221";
		arr[154]="172.18.30.222";
		arr[155]="172.18.30.223";
		arr[156]="172.18.30.224";
		arr[157]="172.18.30.225";
		arr[158]="172.18.30.226";
		arr[159]="172.18.30.227";
		arr[160]="172.18.30.61";
		arr[161]="172.18.30.62";
		arr[162]="172.18.30.64";
		arr[163]="172.18.30.65";
		arr[164]="172.18.30.66";
		arr[165]="172.18.30.67";
		arr[166]="172.18.30.68";
		arr[167]="172.18.30.69";
		arr[168]="172.18.30.77";
		arr[169]="172.18.30.78";
		arr[170]="172.18.30.79";
		arr[171]="172.18.30.80";
		arr[172]="172.18.30.81";
		arr[173]="172.18.30.82";
		arr[174]="172.18.30.83";
		arr[175]="172.18.30.84";
		arr[176]="172.18.30.85";
		arr[177]="172.18.30.86";
		arr[178]="172.18.30.87";
		arr[179]="172.18.30.88";
		arr[180]="172.18.30.89";
		arr[181]="172.18.30.90";
		arr[182]="172.18.30.95";
		arr[183]="172.18.30.97";
		arr[184]="172.18.30.99";
		arr[185]="172.18.99.101";
		arr[186]="172.18.99.102";
		arr[187]="172.18.99.103";
		arr[188]="172.18.99.104";
		arr[189]="172.18.99.105";
		arr[190]="172.18.99.106";
		arr[191]="172.18.99.107";
		arr[192]="172.18.99.108";
		arr[193]="172.18.99.109";
		arr[194]="172.18.99.110";
		arr[195]="172.18.99.111";
		arr[196]="172.18.99.112";
		arr[197]="172.18.99.113";
		arr[198]="172.18.99.116";
		arr[199]="172.18.99.117";
		arr[200]="172.18.99.121";
		arr[201]="172.18.99.122";
		arr[202]="172.18.99.123";
		arr[203]="172.18.99.124";
		arr[204]="172.18.99.125";
		arr[205]="172.18.99.126";
		arr[206]="172.18.99.127";
		arr[207]="172.18.99.128";
		arr[208]="172.18.99.129";
		arr[209]="172.18.99.130";
		arr[210]="172.18.99.131";
		arr[211]="172.18.99.132";
		arr[212]="172.18.99.133";
		arr[213]="172.18.99.134";
		arr[214]="172.18.99.135";
		arr[215]="172.18.99.137";
		arr[216]="172.18.99.138";
		arr[217]="172.18.99.139";
		arr[218]="172.18.99.140";
		arr[219]="172.18.99.141";
		arr[220]="172.18.99.142";
		arr[221]="172.18.99.143";
		arr[222]="172.18.99.145";
		arr[223]="172.18.99.146";
		arr[224]="172.18.99.147";
		arr[225]="172.18.99.148";
		arr[226]="172.18.99.149";
		arr[227]="172.18.99.150";
		arr[228]="172.18.99.151";
		arr[229]="172.18.99.152";
		arr[230]="172.18.99.153";
		arr[231]="172.18.99.154";
		arr[232]="172.18.99.157";
		arr[233]="172.18.99.158";
		arr[234]="172.18.99.159";
		arr[235]="172.18.99.160";
		arr[236]="172.18.99.161";
		arr[237]="172.18.99.162";
		arr[238]="172.18.99.163";
		arr[239]="172.18.99.164";
		arr[240]="172.18.99.165";
		arr[241]="172.18.99.166";
		arr[242]="172.18.99.167";
		arr[243]="172.18.99.174";
		arr[244]="172.18.99.175";
		arr[245]="172.18.99.176";
		arr[246]="172.18.99.177";
		arr[247]="172.18.99.178";
		arr[248]="172.18.99.179";
		arr[249]="172.18.99.180";
		arr[250]="172.18.99.181";
		arr[251]="172.18.99.182";
		arr[252]="172.18.99.183";
		arr[253]="172.18.99.184";
		arr[254]="172.18.99.185";
		arr[255]="172.18.99.186";
		arr[256]="172.18.99.188";
		arr[257]="172.18.99.194";
		arr[258]="172.18.99.195";
		arr[259]="172.18.99.201";
		arr[260]="172.18.99.207";
		arr[261]="172.18.99.211";
		arr[262]="172.18.99.220";
		arr[263]="172.18.99.229";
		arr[264]="172.18.99.230";
		arr[265]="172.18.99.231";
		arr[266]="172.18.99.232";
		arr[267]="172.18.99.233";
		arr[268]="172.18.99.234";
		arr[269]="172.18.99.235";
		arr[270]="172.18.99.236";
		arr[271]="172.18.99.61";
		arr[272]="172.18.99.62";
		arr[273]="172.18.99.63";
		arr[274]="172.18.99.64";
		arr[275]="172.18.99.65";
		arr[276]="172.18.99.66";
		arr[277]="172.18.99.67";
		arr[278]="172.18.99.68";
		arr[279]="172.18.99.69";
		arr[280]="172.18.99.71";
		arr[281]="172.18.99.72";
		arr[282]="172.18.99.73";
		arr[283]="172.18.99.74";
		arr[284]="172.18.99.75";
		arr[285]="172.18.99.76";
		arr[286]="172.18.99.77";
		arr[287]="172.18.99.78";
		arr[288]="172.18.99.79";
		arr[289]="172.18.99.80";
		arr[290]="172.18.99.91";
		arr[291]="172.18.99.92";
		arr[292]="172.18.99.93";
		arr[293]="172.18.99.94";
		arr[294]="172.18.99.95";
		arr[295]="172.18.99.96";
		arr[296]="172.18.99.97";
		arr[297]="172.18.99.98";
		arr[298]="172.19.132.61";
		arr[299]="172.19.132.62";
		arr[300]="172.19.132.63";
		arr[301]="172.19.132.64";
		arr[302]="172.19.132.67";
		arr[303]="172.19.132.68";
		arr[304]="172.19.132.69";
		arr[305]="172.19.132.73";
		arr[306]="172.19.132.74";
		arr[307]="172.19.132.75";
		arr[308]="172.19.132.76";
		arr[309]="172.19.132.77";
		arr[310]="172.19.132.78";
		arr[311]="172.19.132.79";
		arr[312]="172.19.132.80";
		arr[313]="172.19.132.81";
		arr[314]="172.19.132.82";
		arr[315]="172.19.132.99";
		arr[316]="172.27.66.230";
		arr[317]="172.27.66.231";
		arr[318]="172.27.66.232";
		arr[319]="172.27.66.233";
		arr[320]="172.27.66.234";
		arr[321]="172.27.66.235";
		arr[322]="172.27.66.236";
		arr[323]="172.27.66.237";
		arr[324]="172.27.66.238";
		arr[325]="192.168.40.103";
		arr[326]="192.168.40.104";
		arr[327]="192.168.40.105";
		arr[328]="192.168.40.106";
		arr[329]="192.168.40.123";
		arr[330]="192.168.40.124";
		arr[331]="192.168.40.125";
		arr[332]="192.168.40.126";
		arr[333]="192.168.40.128";
		arr[334]="192.168.40.129";
		arr[335]="192.168.40.190";
		arr[336]="192.168.40.191";
		arr[337]="192.168.40.192";
		arr[338]="192.168.40.193";
		arr[339]="192.168.40.194";
		arr[340]="192.168.40.195";
		arr[341]="192.168.40.197";
		arr[342]="192.168.40.198";
		arr[343]="192.168.40.217";
		arr[344]="192.168.40.218";
		arr[345]="192.168.40.219";
		arr[346]="192.168.40.220";
		arr[347]="70.12.202.101";
		arr[348]="70.12.202.102";
		arr[349]="70.12.202.104";
		arr[350]="70.12.202.115";
		arr[351]="70.12.202.116";
		arr[352]="70.12.202.127";
		arr[353]="70.12.202.128";
		arr[354]="70.12.202.130";
		arr[355]="70.12.202.132";
		arr[356]="70.12.202.135";
		arr[357]="70.12.202.136";
		arr[358]="70.12.202.140";
		arr[359]="70.12.202.156";
		arr[360]="70.12.202.157";
		arr[361]="70.12.202.158";
		arr[362]="70.12.202.159";
		arr[363]="70.12.202.16";
		arr[364]="70.12.202.160";
		arr[365]="70.12.202.161";
		arr[366]="70.12.202.162";
		arr[367]="70.12.202.163";
		arr[368]="70.12.202.165";
		arr[369]="70.12.202.166";
		arr[370]="70.12.202.167";
		arr[371]="70.12.202.169";
		arr[372]="70.12.202.17";
		arr[373]="70.12.202.172";
		arr[374]="70.12.202.182";
		arr[375]="70.12.202.183";
		arr[376]="70.12.202.189";
		arr[377]="70.12.202.190";
		arr[378]="70.12.202.192";
		arr[379]="70.12.202.201";
		arr[380]="70.12.202.205";
		arr[381]="70.12.202.221";
		arr[382]="70.12.202.222";
		arr[383]="70.12.202.223";
		arr[384]="70.12.202.224";
		arr[385]="70.12.202.225";
		arr[386]="70.12.202.227";
		arr[387]="70.12.202.228";
		arr[388]="70.12.202.238";
		arr[389]="70.12.202.243";
		arr[390]="70.12.202.244";
		arr[391]="70.12.202.245";
		arr[392]="70.12.202.246";
		arr[393]="70.12.202.247";
		arr[394]="70.12.202.248";
		arr[395]="70.12.202.249";
		arr[396]="70.12.202.250";
		arr[397]="70.12.202.253";
		arr[398]="70.12.202.254";
		arr[399]="70.12.202.40";
		arr[400]="70.12.202.42";
		arr[401]="70.12.202.45";
		arr[402]="70.12.202.46";
		arr[403]="70.12.202.47";
		arr[404]="70.12.202.55";
		arr[405]="70.12.202.56";
		arr[406]="70.12.202.57";
		arr[407]="70.12.202.58";
		arr[408]="70.12.202.59";
		arr[409]="70.12.202.75";
		arr[410]="70.12.202.80";
		arr[411]="70.12.202.81";
		arr[412]="70.12.202.83";
		arr[413]="70.12.202.84";
		arr[414]="70.12.202.86";
		arr[415]="70.12.202.92";
		arr[416]="70.12.202.93";
		arr[417]="70.12.202.94";
		arr[418]="70.12.202.96";
		arr[419]="70.12.202.98";
		arr[420]="70.12.203.103";
		arr[421]="70.12.203.104";
		arr[422]="70.12.203.111";
		arr[423]="70.12.203.112";
		arr[424]="70.12.203.121";
		arr[425]="70.12.203.122";
		arr[426]="70.12.203.125";
		arr[427]="70.12.203.126";
		arr[428]="70.12.203.127";
		arr[429]="70.12.203.128";
		arr[430]="70.12.203.139";
		arr[431]="70.12.203.143";
		arr[432]="70.12.203.146";
		arr[433]="70.12.203.154";
		arr[434]="70.12.203.167";  
		arr[435]="70.12.203.168";
		arr[436]="70.12.203.169";
		arr[437]="70.12.203.170";
		arr[438]="70.12.203.172";
		arr[439]="70.12.203.173";
		arr[440]="70.12.203.185";
		arr[441]="70.12.203.186";
		arr[442]="70.12.203.215"; 
		arr[443]="70.12.203.216";
		arr[444]="70.12.203.225";
		arr[445]="70.12.203.226";
		arr[446]="70.12.203.227";
		arr[447]="70.12.203.229";
		arr[448]="70.12.203.233";
		arr[449]="70.12.203.234";
		arr[450]="70.12.203.33";
		arr[451]="70.12.203.45";
		arr[452]="70.12.203.60";
		arr[453]="70.12.203.65";
		arr[454]="70.12.203.68";
		arr[455]="70.12.203.69";
		arr[456]="70.12.203.73";
		arr[457]="70.12.203.74";
		arr[458]="70.12.203.77";
		arr[459]="70.12.204.100";
		arr[460]="70.12.204.101";
		arr[461]="70.12.204.114";
		arr[462]="70.12.204.115";
		arr[463]="70.12.204.118";
		arr[464]="70.12.204.121";
		arr[465]="70.12.204.122";
		arr[466]="70.12.204.123";
		arr[467]="70.12.204.124";
		arr[468]="70.12.204.125";
		arr[469]="70.12.204.136";
		arr[470]="70.12.204.137"; 
		arr[471]="70.12.204.138";
		arr[472]="70.12.204.139";
		arr[473]="70.12.204.14";
		arr[474]="70.12.204.140";
		arr[475]="70.12.204.141";
		arr[476]="70.12.204.142";
		arr[477]="70.12.204.145";
		arr[478]="70.12.204.151";
		arr[479]="70.12.204.152";
		arr[480]="70.12.204.153";
		arr[481]="70.12.204.154";
		arr[482]="70.12.204.159";
		arr[483]="70.12.204.16";
		arr[484]="70.12.204.166";
		arr[485]="70.12.204.17";
		arr[486]="70.12.204.177";
		arr[487]="70.12.204.178";
		arr[488]="70.12.204.181";
		arr[489]="70.12.204.191";
		arr[490]="70.12.204.192";
		arr[491]="70.12.204.195";
		arr[492]="70.12.204.196";
		arr[493]="70.12.204.200";
		arr[494]="70.12.204.209";
		arr[495]="70.12.204.210";
		arr[496]="70.12.204.211";
		arr[497]="70.12.204.212";
		arr[498]="70.12.204.213"; 
		arr[499]="70.12.204.214";  
		arr[500]="70.12.204.215";
		arr[501]="70.12.204.216";
		arr[502]="70.12.204.217";
		arr[503]="70.12.204.224";
		arr[504]="70.12.204.225";
		arr[505]="70.12.204.226";
		arr[506]="70.12.204.227";
		arr[507]="70.12.204.228";
		arr[508]="70.12.204.234";
		arr[509]="70.12.204.240";
		arr[510]="70.12.204.241";
		arr[511]="70.12.204.245";
		arr[512]="70.12.204.246";
		arr[513]="70.12.204.250";
		arr[514]="70.12.204.253";
		arr[515]="70.12.204.36";
		arr[516]="70.12.204.36";
		arr[517]="70.12.204.37";
		arr[518]="70.12.204.37";
		arr[519]="70.12.204.38";
		arr[520]="70.12.204.40";
		arr[521]="70.12.204.46";
		arr[522]="70.12.204.47";
		arr[523]="70.12.204.49";
		arr[524]="70.12.204.50";
		arr[525]="70.12.204.51";
		arr[526]="70.12.204.52";
		arr[527]="70.12.204.57";
		arr[528]="70.12.204.58";
		arr[529]="70.12.204.59";
		arr[530]="70.12.204.67";
		arr[531]="70.12.204.68";
		arr[532]="70.12.204.71";
		arr[533]="70.12.204.78";
		arr[534]="70.12.204.98";
		arr[535]="70.12.204.99";
		arr[536]="70.12.205.116";
		arr[537]="70.12.205.121";
		arr[538]="70.12.205.122";
		arr[539]="70.12.205.123";
		arr[540]="70.12.205.185";
		arr[541]="70.12.205.208";
		arr[542]="70.12.205.228";
		arr[543]="70.12.205.242";
		arr[544]="70.12.205.50";
		arr[545]="70.12.205.65";
		arr[546]="70.12.205.66";
		arr[547]="70.12.205.67";
		arr[548]="70.12.205.68";
		arr[549]="70.12.205.70";
		arr[550]="70.12.206.121";
		arr[551]="70.12.206.122";
		arr[552]="70.12.206.123";
		arr[553]="70.12.206.124";
		arr[554]="70.12.206.129";
		arr[555]="70.12.206.138";
		arr[556]="70.12.206.139";
		arr[557]="70.12.206.140";
		arr[558]="70.12.206.141";
		arr[559]="70.12.206.142";
		arr[560]="70.12.206.178";
		arr[561]="70.12.206.179";
		arr[562]="70.12.206.184";
		arr[563]="70.12.206.185";
		arr[564]="70.12.206.187";
		arr[565]="70.12.206.188";
		arr[566]="70.12.206.197";
		arr[567]="70.12.206.199";
		arr[568]="70.12.206.207";
		arr[569]="70.12.206.208";
		arr[570]="70.12.206.221";
		arr[571]="70.12.206.222";
		arr[572]="70.12.206.224";
		arr[573]="70.12.206.225";
		arr[574]="70.12.206.228";
		arr[575]="70.12.206.229";
		arr[576]="70.12.206.24";
		arr[577]="70.12.206.241";
		arr[578]="70.12.206.242";
		arr[579]="70.12.206.243";
		arr[580]="70.12.206.244";
		arr[581]="70.12.206.245";
		arr[582]="70.12.206.246";
		arr[583]="70.12.206.247";
		arr[584]="70.12.206.249";
		arr[585]="70.12.206.26";
		arr[586]="70.12.206.27";
		arr[587]="70.12.206.34";
		arr[588]="70.12.206.35";
		arr[589]="70.12.206.38";
		arr[590]="70.12.206.39";
		arr[591]="70.12.206.41";
		arr[592]="70.12.206.45";
		arr[593]="70.12.206.46";
		arr[594]="70.12.206.47";
		arr[595]="70.12.206.48";
		arr[596]="70.12.206.49";
		arr[597]="70.12.206.50";
		arr[598]="70.12.206.51";
		arr[599]="70.12.206.52";
		arr[600]="70.12.206.61";
		arr[601]="70.12.206.62";
		arr[602]="70.12.206.71";
		arr[603]="70.12.206.72";
		arr[604]="70.12.206.79";



		
		return arr;
	}
	
	public static void sshConTest(){
		String[] ips = getIPs();
		int leng = ips.length;
		
		String ip = "redrug.co.kr";
		int port1 = 22;
		int port2 = 23;
		int port3 = 10226;
		Session ssh = null;
		int idx = 0;
		while(idx < leng){
			ip = ips[idx];
			System.out.print(ip + " : ");
			Connection conn = new Connection(ip,port1);
			
			try{
				conn.connect(null,1000,0);
				
				System.out.print(port1 + ":CONNECTED ");
				
			}catch(Exception e){
				System.out.print(port1 + ":X ");
			}
			finally{
				conn.close();
			}
			try{
				conn.connect(null,1000,0);
				System.out.print(port2 + ":CONNECTED ");
				
			}catch(Exception e){
				System.out.print(port2 + ":X ");
			}
			finally{
				conn.close();
			}
			try{
				conn.connect(null,1000,0);
				System.out.println(port3 + ":CONNECTED ");
				
			}catch(Exception e){
				System.out.println(port3 + ":X ");
			}
			finally{
				conn.close();
			}
			idx++;
		}
	}

	public static void main(String args[]){
				
		sshConTest();
		
		
		
		
	}
	
}
